name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        cd echo-backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests with coverage
      run: |
        cd echo-backend
        pytest --cov=. --cov-report=xml --cov-report=html
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./echo-backend/coverage.xml
        flags: backend
        name: backend-coverage

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: echo-frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd echo-frontend
        npm ci
    
    - name: Run tests with coverage
      run: |
        cd echo-frontend
        npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./echo-frontend/coverage/coverage-final.json
        flags: frontend
        name: frontend-coverage

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install Python linters
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 mypy
    
    - name: Run Black
      run: |
        cd echo-backend
        black --check .
    
    - name: Run Flake8
      run: |
        cd echo-backend
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Set up Node.js for frontend linting
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install ESLint
      run: |
        cd echo-frontend
        npm install -D eslint @vue/eslint-config-prettier
    
    - name: Run ESLint
      run: |
        cd echo-frontend
        npx eslint src --ext .js,.vue || true

  build:
    needs: [backend-tests, frontend-tests]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Build frontend
      run: |
        cd echo-frontend
        npm ci
        npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: echo-frontend/dist/